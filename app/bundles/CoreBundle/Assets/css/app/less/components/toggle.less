.toggle {
  display: block;
  margin: 0.5em;
  padding: 4px 4px 6px 6px;
  border: 0 solid #005a9c;
  border-radius: 5px;
  width: 16em;

  &:focus {
    outline: initial;
  }
}

.toggle .toggle__label {
  display: inline-block;
  width: 9em;
  user-select: none;
}

.toggle input[role="switch"] {
  position: absolute;
  display: block;
  padding: 0 !important;
  left: -9999px !important;
  height: 0 !important;
  line-height: 0 !important;
  background: 0 0 !important;
}

.toggle input[role="switch"] ~ .toggle__state {
  display: inline-block;
  user-select: none;
}

.toggle input[role="switch"] ~ .toggle__state > .toggle__container {
  position: relative;
  top: 2px;
  display: inline-block;
  border: 2px solid black;
  width: 40px;
  height: 20px;
  border-radius: 11px;
}

.toggle input[role="switch"] ~ .toggle__state > .toggle__container > .toggle__position {
  position: relative;
  top: 1px;
  left: 2px;
  display: inline-block;
  border: 2px solid black;
  border-radius: 9px;
  width: 14px;
  height: 14px;
  background: black;
  opacity: 0.6;
}

.toggle input[role="switch"]:not(:checked) ~ .toggle__state span.toggle__on {
  display: none;
}

.toggle input[role="switch"]:checked ~ .toggle__state > span.toggle__off {
  display: none;
}

.toggle input[role="switch"]:checked ~ .toggle__state > .toggle__container > .toggle__position {
  left: 20px;
  border-color: green;
  background: green;
  opacity: 1;
}

.toggle.focus,
.toggle:hover {
  padding: 2px 2px 4px 4px;
  border-width: 2px;
  outline: none;
  background-color: #def;
  cursor: pointer;
}

.toggle.focus span.toggle__container,
.toggle:hover span.toggle__container {
  background-color: white;
}




/*
.toggle {
    display: inline-block;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none
}

.toggle__button {
    position: absolute;
    overflow: hidden;
    padding: 0;
    border: 0;
    margin: -1px;
    block-size: 1px;
    clip: rect(0, 0, 0, 0);
    inline-size: 1px;
    visibility: inherit;
    white-space: nowrap
}

.toggle__button:focus {
    outline: none
}

.toggle__appearance {
    display: inline-grid;
    align-items: center;
    -webkit-column-gap: .5em;
    -moz-column-gap: .5em;
    column-gap: .5em;
    cursor: pointer;
    grid-template-columns: -webkit-max-content -webkit-max-content;
    grid-template-columns: max-content max-content
}

.toggle__switch {
    --switch-size: 40px;
    position: relative;
    border-radius: var(--switch-size);
    background-color: var(--toggle-off, #8d8d8d);
    block-size: calc(var(--switch-size) - 17px);
    min-block-size: 10px;
    inline-size: var(--switch-size);
    transition: background-color 70ms cubic-bezier(.2, 0, 1, .9);
}

.toggle__switch::before {
    position: absolute;
    border-radius: 50%;
    background-color: var(--icon-on-color, #ffffff);
    block-size: calc(var(--switch-size) - 21px);
    content: "";
    inline-size: calc(var(--switch-size) - 21px);
    inset-block-start: 2px;
    inset-inline-start: 2px;
    transition: -webkit-transform var(--duration-expressive) cubic-bezier(.54, 1.85, .5, 1);
    transition: transform var(--duration-expressive) cubic-bezier(.54, 1.85, .5, 1);
    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.5);
}

.toggle__button:focus+.toggle__label .toggle__switch,
.toggle:not(.toggle--disabled):active .toggle__switch {
    box-shadow: 0 0 0 1px var(--focus-inset, #ffffff), 0 0 0 3px var(--focus, #0f62fe)
}

.toggle__switch--checked {
    background-color: var(--support-success, #24a148);
}

.toggle__switch--checked::before {
    -webkit-transform: translateX(17px);
    transform: translateX(17px)
}

.toggle__text {
    font-size: var(--body-01-font-size, 0.875em);
    font-weight: var(--body-01-font-weight, 400);
    line-height: var(--body-01-line-height, 1.42857);
    letter-spacing: var(--body-01-letter-spacing, 0.16px);
    color: var(--text-primary, #161616)
}

.toggle__appearance[size="sm"] .toggle__switch {
    --switch-size: 33px;
    &:before {box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);}
}

.toggle__check {
    position: absolute;
    block-size: .4125em;
    fill: var(--support-success, #24a148);
    inline-size: .475em;
    inset-block-start: .375em;
    inset-inline-end: .3125em;
    visibility: hidden
}

.toggle__appearance[size="sm"] .toggle__switch--checked .toggle__check {
    visibility: visible
}

.toggle--disabled .toggle__appearance {
    cursor: not-allowed
}

.toggle--disabled .toggle__label-text,
.toggle--disabled .toggle__text {
    color: var(--text-disabled, rgba(22, 22, 22, 0.25))
}

.toggle--disabled .toggle__switch {
    background-color: var(--button-disabled, #c6c6c6)
}

.toggle--disabled .toggle__switch::before {
    background-color: var(--icon-on-color-disabled, #8d8d8d)
}

.toggle--disabled .toggle__check {
    fill: var(--button-disabled, #c6c6c6)
}

.toggle--readonly .toggle__appearance {
    cursor: default
}

.toggle--readonly .toggle__switch {
    border: 1px solid var(--icon-disabled, rgba(22, 22, 22, 0.25));
    background-color: transparent
}

.toggle--readonly .toggle__switch::before {
    background-color: var(--text-primary, #161616);
    inset-block-start: 1px;
    inset-inline-start: 1px;
}

.toggle--readonly .toggle__check {
    fill: var(--background, #ffffff);
    inset-block-start: .3125em;
    inset-inline-end: .25em
}

.toggle--readonly .toggle__text {
    cursor: text;
    -webkit-user-select: text;
    -ms-user-select: text;
    user-select: text
}

@media screen and (-ms-high-contrast:active),
(forced-colors:active) {

    .toggle__switch,
    .toggle__switch::before {
        outline: 1px solid transparent
    }
}

@media screen and (-ms-high-contrast:active),
(forced-colors:active) {

    .toggle__button:focus+.toggle__label .toggle__switch,
    .toggle:not(.toggle--disabled):active .toggle__switch {
        color: Highlight;
        outline: 1px solid Highlight
    }
}

[dir=rtl] .toggle__switch--checked::before {
    -webkit-transform: translateX(-17px);
    transform: translateX(-17px)
}

[dir=rtl] .toggle__appearance--sm .toggle__switch--checked::before {
    -webkit-transform: translateX(-1em);
    transform: translateX(-1em)
}
*/